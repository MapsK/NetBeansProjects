/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fast_food;

import java.awt.Component;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javafx.event.ActionEvent;
import java.io.BufferedReader;

/**
 *
 * @author Kea
 */
public class frmFastFood extends javax.swing.JFrame {

    private static Object textField;

    double Price_Chips = 20;
    double Price_Burger = 30;
    double Price_CheeseBurger = 40;
    double Price_ChickenBurger = 47;
    double Price_DCheeseBurger = 55;
    double Price_AvoBurger = 65;
    double Price_ChocMuffin = 35;
    double Price_ChocCake = 40;
    double Price_Cheesecake = 45;
    double Price_Tea = 22;
    double Price_Coffee = 25;
    double Price_Coke = 20;
    double Price_FOrange = 20;
    double Price_Stoney = 20;
    double Tax_Rate = 15;
    
    Double iTax, iTotal, iSubtotal, iChange, iCost;
    
    Double[] itemCost = new Double[22];
    
    
    
    /**
     * Creates new form frmFastFood
     */
    public frmFastFood() {
        initComponents();
    }
    
      public void actionPerfomed(ActionEvent ev)
      {
        try
        {
            File f = new File("orders.txt");
            FileOutputStream fos = new FileOutputStream(f);
            PrintWriter pw = new PrintWriter(fos);
            
            pw.println(chkChips.isSelected() + "-" + txtChips.getText() + "-" 
            + chkBurger.isSelected() + "-" + txtBurger.getText());
            
            
            
            pw.write("Order Confirmed");
            pw.flush();
            fos.close();
            pw.close();
            System.out.println("Order Confirmed");
            
            
        }
        catch(IOException ex)
        {
            ex.printStackTrace();
        }
      }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        chkChips = new javax.swing.JCheckBox();
        chkBurger = new javax.swing.JCheckBox();
        chkCheeseBurger = new javax.swing.JCheckBox();
        chkFood = new javax.swing.JCheckBox();
        chkDCheeseBurger = new javax.swing.JCheckBox();
        chkAvoBurger = new javax.swing.JCheckBox();
        txtDCheeseBurger = new javax.swing.JTextField();
        txtChickenBurger = new javax.swing.JTextField();
        txtAvoBurger = new javax.swing.JTextField();
        txtChips = new javax.swing.JTextField();
        txtBurger = new javax.swing.JTextField();
        txtCheeseBurger = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        chkChocMuffin = new javax.swing.JCheckBox();
        chkChocCake = new javax.swing.JCheckBox();
        chkCheesecake = new javax.swing.JCheckBox();
        txtChocMuffin = new javax.swing.JTextField();
        txtChocCake = new javax.swing.JTextField();
        txtCheesecake = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        chkCoffee = new javax.swing.JCheckBox();
        chkTea = new javax.swing.JCheckBox();
        chkStoney = new javax.swing.JCheckBox();
        chkCoke = new javax.swing.JCheckBox();
        chkFOrange = new javax.swing.JCheckBox();
        txtTea = new javax.swing.JTextField();
        txtCoffee = new javax.swing.JTextField();
        txtFOrange = new javax.swing.JTextField();
        txtCoke = new javax.swing.JTextField();
        txtStoney = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        cmbPaymentMethod = new javax.swing.JComboBox<>();
        txtChange = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnTotal = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        txtTotal = new javax.swing.JTextField();
        txtTax = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtSubtotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPayment = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        lblSurname = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblAdress = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtSurname = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1600, 1000));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 4));

        chkChips.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkChips.setText("Chips        R20");
        chkChips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkChipsActionPerformed(evt);
            }
        });

        chkBurger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkBurger.setText("Burger     R30");
        chkBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkBurgerActionPerformed(evt);
            }
        });

        chkCheeseBurger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkCheeseBurger.setText("Cheese Burger    R40");
        chkCheeseBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCheeseBurgerActionPerformed(evt);
            }
        });

        chkFood.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkFood.setText("Chicken Burger   R47");
        chkFood.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFoodActionPerformed(evt);
            }
        });

        chkDCheeseBurger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkDCheeseBurger.setText("Double Cheese Burger   R55");
        chkDCheeseBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDCheeseBurgerActionPerformed(evt);
            }
        });

        chkAvoBurger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkAvoBurger.setText("Avo, Bacon Burger    R65");
        chkAvoBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAvoBurgerActionPerformed(evt);
            }
        });

        txtDCheeseBurger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtDCheeseBurger.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDCheeseBurger.setText("0");
        txtDCheeseBurger.setEnabled(false);
        txtDCheeseBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDCheeseBurgerActionPerformed(evt);
            }
        });
        txtDCheeseBurger.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDCheeseBurgerKeyTyped(evt);
            }
        });

        txtChickenBurger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtChickenBurger.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtChickenBurger.setText("0");
        txtChickenBurger.setEnabled(false);
        txtChickenBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChickenBurgerActionPerformed(evt);
            }
        });
        txtChickenBurger.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtChickenBurgerKeyTyped(evt);
            }
        });

        txtAvoBurger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAvoBurger.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtAvoBurger.setText("0");
        txtAvoBurger.setEnabled(false);
        txtAvoBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAvoBurgerActionPerformed(evt);
            }
        });
        txtAvoBurger.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAvoBurgerKeyTyped(evt);
            }
        });

        txtChips.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtChips.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtChips.setText("0");
        txtChips.setEnabled(false);
        txtChips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChipsActionPerformed(evt);
            }
        });
        txtChips.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtChipsKeyTyped(evt);
            }
        });

        txtBurger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtBurger.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtBurger.setText("0");
        txtBurger.setEnabled(false);
        txtBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBurgerActionPerformed(evt);
            }
        });
        txtBurger.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBurgerKeyTyped(evt);
            }
        });

        txtCheeseBurger.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCheeseBurger.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCheeseBurger.setText("0");
        txtCheeseBurger.setEnabled(false);
        txtCheeseBurger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCheeseBurgerActionPerformed(evt);
            }
        });
        txtCheeseBurger.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCheeseBurgerKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("FOOD MENU");

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("QTY");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(chkCheeseBurger, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                            .addComponent(chkAvoBurger, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE))
                        .addComponent(chkBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkChips, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkFood, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkDCheeseBurger, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(29, 29, 29)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtAvoBurger, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtChickenBurger, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtCheeseBurger, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDCheeseBurger, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBurger, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtChips, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(47, 47, 47))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChips, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkChips))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkBurger))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCheeseBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCheeseBurger))
                .addGap(42, 42, 42)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChickenBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkFood))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDCheeseBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDCheeseBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAvoBurger, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkAvoBurger))
                .addGap(66, 66, 66))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 4));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("FAST FOOD MENU");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(275, 275, 275)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 910, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 4));

        chkChocMuffin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkChocMuffin.setText("Chocolate Muffin  R35");
        chkChocMuffin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkChocMuffinActionPerformed(evt);
            }
        });

        chkChocCake.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkChocCake.setText("Chocolate Cake   R40");
        chkChocCake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkChocCakeActionPerformed(evt);
            }
        });

        chkCheesecake.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkCheesecake.setText("Cheesecake  R45");
        chkCheesecake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCheesecakeActionPerformed(evt);
            }
        });

        txtChocMuffin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtChocMuffin.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtChocMuffin.setText("0");
        txtChocMuffin.setEnabled(false);
        txtChocMuffin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChocMuffinActionPerformed(evt);
            }
        });
        txtChocMuffin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtChocMuffinKeyTyped(evt);
            }
        });

        txtChocCake.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtChocCake.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtChocCake.setText("0");
        txtChocCake.setEnabled(false);
        txtChocCake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChocCakeActionPerformed(evt);
            }
        });
        txtChocCake.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtChocCakeKeyTyped(evt);
            }
        });

        txtCheesecake.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCheesecake.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCheesecake.setText("0");
        txtCheesecake.setEnabled(false);
        txtCheesecake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCheesecakeActionPerformed(evt);
            }
        });
        txtCheesecake.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCheesecakeKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DESSERT MENU");

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("QTY");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkCheesecake, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkChocCake, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkChocMuffin, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtChocMuffin)
                        .addGap(6, 6, 6))
                    .addComponent(txtChocCake)
                    .addComponent(txtCheesecake))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chkChocMuffin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtChocMuffin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtChocCake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkChocCake, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCheesecake, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCheesecake, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 4));

        chkCoffee.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkCoffee.setText("Coffee  R25");
        chkCoffee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCoffeeActionPerformed(evt);
            }
        });

        chkTea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkTea.setText("Tea   R22");
        chkTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTeaActionPerformed(evt);
            }
        });

        chkStoney.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkStoney.setText("Stoney    R20");
        chkStoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkStoneyActionPerformed(evt);
            }
        });

        chkCoke.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkCoke.setText("Coke   R20");
        chkCoke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCokeActionPerformed(evt);
            }
        });

        chkFOrange.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        chkFOrange.setText("Fanta Orange   R20");
        chkFOrange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFOrangeActionPerformed(evt);
            }
        });

        txtTea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTea.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTea.setText("0");
        txtTea.setEnabled(false);
        txtTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeaActionPerformed(evt);
            }
        });
        txtTea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTeaKeyTyped(evt);
            }
        });

        txtCoffee.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCoffee.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCoffee.setText("0");
        txtCoffee.setEnabled(false);
        txtCoffee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCoffeeActionPerformed(evt);
            }
        });
        txtCoffee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCoffeeKeyTyped(evt);
            }
        });

        txtFOrange.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtFOrange.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFOrange.setText("0");
        txtFOrange.setEnabled(false);
        txtFOrange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFOrangeActionPerformed(evt);
            }
        });
        txtFOrange.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFOrangeKeyTyped(evt);
            }
        });

        txtCoke.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCoke.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCoke.setText("0");
        txtCoke.setEnabled(false);
        txtCoke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCokeActionPerformed(evt);
            }
        });
        txtCoke.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCokeKeyTyped(evt);
            }
        });

        txtStoney.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtStoney.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtStoney.setText("0");
        txtStoney.setEnabled(false);
        txtStoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStoneyActionPerformed(evt);
            }
        });
        txtStoney.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStoneyKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DRINKS MENU");

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("QTY");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(chkTea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkCoffee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkCoke, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkFOrange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkStoney, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(70, 70, 70)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCoffee, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTea, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCoke, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFOrange, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStoney, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(123, 123, 123))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap(40, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkTea)
                    .addComponent(txtTea, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCoffee)
                    .addComponent(txtCoffee, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCoke)
                    .addComponent(txtCoke, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFOrange, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkFOrange))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkStoney)
                    .addComponent(txtStoney, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 4));

        cmbPaymentMethod.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbPaymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Debit Card", "Master Card", "Visa Card" }));
        cmbPaymentMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPaymentMethodActionPerformed(evt);
            }
        });

        txtChange.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChangeActionPerformed(evt);
            }
        });
        txtChange.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtChangeKeyTyped(evt);
            }
        });

        btnSubmit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSubmit.setText("SUBMIT");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTotal.setText("TOTAL");
        btnTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReset.setText("RESET");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        txtTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        txtTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTotalKeyTyped(evt);
            }
        });

        txtTax.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTaxActionPerformed(evt);
            }
        });
        txtTax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTaxKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("PAYMENT");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("TAX");

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTotal.setText("TOTAL");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("SUBTOTAL");

        txtSubtotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSubtotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSubtotalKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("CHANGE");

        txtPayment.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtPayment.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaymentActionPerformed(evt);
            }
        });
        txtPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPaymentKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbPaymentMethod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSubtotal, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(txtTax)
                    .addComponent(txtChange)
                    .addComponent(txtTotal)
                    .addComponent(txtPayment))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTax, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChange, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbPaymentMethod, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(txtPayment))
                .addGap(50, 50, 50)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 4));

        lblSurname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblSurname.setText("SURNAME:");

        lblName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblName.setText("NAME:");

        lblAdress.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblAdress.setText("ADDRESS:");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtSurname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtAddress.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(lblAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAdress, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(752, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(109, 109, 109))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
   /* public class CheckboxListCellRenderer extends JList <JCheckBox> 
    {
        
    }*/
    private JFrame frame;
    
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        
        frame = new JFrame("Submit");
        
        if (JOptionPane.showConfirmDialog(frame, "Do you want to exit?", "Fast Food",
            JOptionPane.YES_NO_CANCEL_OPTION) != JOptionPane.YES_NO_CANCEL_OPTION)
        {
            System.exit(0);
        }
        
        
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    
    private FileWriter fw;
    private PrintWriter pw;
  //  private BufferReader br;
   // DefaultListModel<String> dmList = new DefaultListModel<String>();
    
    private void btnTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalActionPerformed
        // TODO add your handling code here:
        
        itemCost[0] = Double.parseDouble(txtChips.getText());
        itemCost[1] = Double.parseDouble(txtBurger.getText());
        itemCost[2] = Double.parseDouble(txtCheeseBurger.getText());
        itemCost[3] = Double.parseDouble(txtChickenBurger.getText());
        itemCost[4] = Double.parseDouble(txtDCheeseBurger.getText());
        itemCost[5] = Double.parseDouble(txtAvoBurger.getText());
        itemCost[6] = Double.parseDouble(txtChocMuffin.getText());
        itemCost[7] = Double.parseDouble(txtChocCake.getText());
        itemCost[8] = Double.parseDouble(txtCheesecake.getText());
        itemCost[9] = Double.parseDouble(txtTea.getText());
        itemCost[10] = Double.parseDouble(txtCoffee.getText());
        itemCost[11] = Double.parseDouble(txtCoke.getText());
        itemCost[12] = Double.parseDouble(txtFOrange.getText());
        itemCost[13] = Double.parseDouble(txtStoney.getText());
        
        iChange = Double.parseDouble(txtPayment.getText());
        
        String PaymentMethod = (String)cmbPaymentMethod.getSelectedItem();
        
        if (PaymentMethod == "Cash")
        {
            iSubtotal = itemCost[0] + itemCost[1] + itemCost[2] + itemCost[3] + itemCost[4] + itemCost[5] 
            + itemCost[6] + itemCost[7] + itemCost[8] + itemCost[9] + itemCost[10] + itemCost[11] 
            + itemCost[12] + itemCost[13];

            
            if (iChange >= iSubtotal)
            {
                iTax = (iSubtotal * Tax_Rate)/100;

                String cTax =  String.format("R%.2f", iTax);
                txtTax.setText(cTax);

                String cSubTotal = String.format("R%.2f", iSubtotal);
                txtSubtotal.setText(cSubTotal);

                String cTotal = String.format("R%.2f", iSubtotal * iTax);
                txtTotal.setText(cTotal);
                
                String cChange = String.format("R%.2f", iChange - (iSubtotal * iTax));
                txtChange.setText(cChange);
            
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Not enough cash entered.", "Fast Food"
                , JOptionPane.OK_OPTION);
            }
        }
        else if(PaymentMethod == "Visa Card" || PaymentMethod == "Debit Card" || PaymentMethod == "Master Card")
        {
            iSubtotal = itemCost[0] + itemCost[1] + itemCost[2] + itemCost[3] + itemCost[4] + itemCost[5] 
            + itemCost[6] + itemCost[7] + itemCost[8] + itemCost[9] + itemCost[10] + itemCost[11] 
            + itemCost[12] + itemCost[13];


            iTax = (iSubtotal * Tax_Rate)/100;

            String cTax =  String.format("R%.2f", iTax);
            txtTax.setText(cTax);

            String cSubTotal = String.format("R%.2f", iSubtotal);
            txtSubtotal.setText(cSubTotal);

            String cTotal = String.format("R%.2f", iSubtotal + iTax);
            txtTotal.setText(cTotal);
                
           // String cChange = String.format("R%.2f", iChange - (iSubtotal + iTax));
           // txtChange.setText(cChange);
        }
    }//GEN-LAST:event_btnTotalActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
       
        txtName.setText("");
        txtSurname.setText("");
        txtAddress.setText("");
        txtChips.setText("0");
        txtBurger.setText("0");
        txtCheeseBurger.setText("0");
        txtChickenBurger.setText("0");
        txtDCheeseBurger.setText("0");
        txtAvoBurger.setText("0");
        txtChocMuffin.setText("0");
        txtChocCake.setText("0");
        txtCheesecake.setText("0");
        txtTea.setText("0");
        txtCoffee.setText("0");
        txtCoke.setText("0");
        txtFOrange.setText("0");
        txtStoney.setText("0");
        txtPayment.setText("0");
        
        //======================
        txtChips.setEnabled(false);
        txtBurger.setEnabled(false);
        txtCheeseBurger.setEnabled(false);
        txtChickenBurger.setEnabled(false);
        txtDCheeseBurger.setEnabled(false);
        txtAvoBurger.setEnabled(false);
        txtChocMuffin.setEnabled(false);
        txtChocCake.setEnabled(false);
        txtCheesecake.setEnabled(false);
        txtTea.setEnabled(false);
        txtCoffee.setEnabled(false);
        txtCoke.setEnabled(false);
        txtFOrange.setEnabled(false);
        txtStoney.setEnabled(false);
         
        //=============================
        txtTax.setText("");
        txtTotal.setText("");
        txtSubtotal.setText("");
        txtChange.setText("");
        
        //=============================
        
        chkChips.setSelected(false);
        chkBurger.setSelected(false);
        chkCheeseBurger.setSelected(false);
        chkFood.setSelected(false);
        chkDCheeseBurger.setSelected(false);
        chkAvoBurger.setSelected(false);
        chkChocMuffin.setSelected(false);
        chkChocCake.setSelected(false);
        chkCheesecake.setSelected(false);
        chkTea.setSelected(false);
        chkCoffee.setSelected(false);
        chkCoke.setSelected(false);
        chkFOrange.setSelected(false);
        chkStoney.setSelected(false);
        
        
    }//GEN-LAST:event_btnResetActionPerformed

    private void txtCheesecakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCheesecakeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCheesecakeActionPerformed

    private void txtCheeseBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCheeseBurgerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCheeseBurgerActionPerformed

    private void cmbPaymentMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPaymentMethodActionPerformed
        // TODO add your handling code here:
        //String PaymentMethod = (String)cmbPaymentMethod.getSelectedItem();
    }//GEN-LAST:event_cmbPaymentMethodActionPerformed

    private void txtChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChipsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChipsActionPerformed

    private void chkChipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkChipsActionPerformed
        // TODO add your handling code here:
        
        if(chkChips.isSelected())
        {
            txtChips.setEnabled(true);
            txtChips.requestFocus();
            txtChips.setText("");
            
        }
        else
        {
            txtChips.setEnabled(false);
            txtChips.setText("0");
        }
    }//GEN-LAST:event_chkChipsActionPerformed

    private void txtChipsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChipsKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtChipsKeyTyped

    private void txtBurgerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBurgerKeyTyped
        // TODO add your handling code here:
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtBurgerKeyTyped

    private void txtCheeseBurgerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCheeseBurgerKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtCheeseBurgerKeyTyped

    private void txtChickenBurgerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChickenBurgerKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtChickenBurgerKeyTyped

    private void txtDCheeseBurgerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDCheeseBurgerKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtDCheeseBurgerKeyTyped

    private void txtAvoBurgerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAvoBurgerKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtAvoBurgerKeyTyped

    private void txtChocMuffinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChocMuffinKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtChocMuffinKeyTyped

    private void txtChocCakeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChocCakeKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtChocCakeKeyTyped

    private void txtCheesecakeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCheesecakeKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtCheesecakeKeyTyped

    private void txtTeaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTeaKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtTeaKeyTyped

    private void txtCoffeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCoffeeKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtCoffeeKeyTyped

    private void txtCokeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCokeKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtCokeKeyTyped

    private void txtFOrangeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFOrangeKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtFOrangeKeyTyped

    private void txtStoneyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStoneyKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtStoneyKeyTyped

    private void txtTaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTaxKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtTaxKeyTyped

    private void txtChangeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChangeKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtChangeKeyTyped

    private void txtTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtTotalKeyTyped

    private void chkBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkBurgerActionPerformed
        // TODO add your handling code here:
        
        if(chkBurger.isSelected())
        {
            txtBurger.setEnabled(true);
            txtBurger.requestFocus();
            txtBurger.setText("");
        }
        else
        {
            txtBurger.setEnabled(false);
            txtBurger.setText("0");
            
        }
    }//GEN-LAST:event_chkBurgerActionPerformed

    private void chkCheeseBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCheeseBurgerActionPerformed
        // TODO add your handling code here:
        
         if(chkCheeseBurger.isSelected())
        {
            txtCheeseBurger.setEnabled(true);
            txtCheeseBurger.requestFocus();
            txtCheeseBurger.setText("");
        }
        else
        {
            txtCheeseBurger.setEnabled(false);
            txtCheeseBurger.setText("0");
        }
    }//GEN-LAST:event_chkCheeseBurgerActionPerformed

    private void chkFoodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFoodActionPerformed
        // TODO add your handling code here:
        
         if(chkFood.isSelected())
        {
            txtChickenBurger.setEnabled(true);
            txtChickenBurger.requestFocus();
            txtChickenBurger.setText("");
        }
        else
        {
            txtChickenBurger.setEnabled(false);
            txtChickenBurger.setText("0");
        }
    }//GEN-LAST:event_chkFoodActionPerformed

    private void chkDCheeseBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDCheeseBurgerActionPerformed
        // TODO add your handling code here:
        
        if(chkDCheeseBurger.isSelected())
        {
            txtDCheeseBurger.setEnabled(true);
            txtDCheeseBurger.requestFocus();
            txtDCheeseBurger.setText("");
        }
        else
        {
            txtDCheeseBurger.setEnabled(false); 
            txtDCheeseBurger.setText("0");
        }
    }//GEN-LAST:event_chkDCheeseBurgerActionPerformed

    private void chkAvoBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAvoBurgerActionPerformed
        // TODO add your handling code here:
        
        if(chkAvoBurger.isSelected())
        {
            txtAvoBurger.setEnabled(true);
            txtAvoBurger.requestFocus();
            txtAvoBurger.setText("");
        }
        else
        {
            txtAvoBurger.setEnabled(false);
            txtAvoBurger.setText("0");
        }
    }//GEN-LAST:event_chkAvoBurgerActionPerformed

    private void chkChocMuffinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkChocMuffinActionPerformed
        // TODO add your handling code here:
        
        if(chkChocMuffin.isSelected())
        {
            txtChocMuffin.setEnabled(true);
            txtChocMuffin.requestFocus();
            txtChocMuffin.setText("");
        }
        else
        {
            txtChocMuffin.setEnabled(false);
            txtChocMuffin.setText("0");
        }
    }//GEN-LAST:event_chkChocMuffinActionPerformed

    private void chkChocCakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkChocCakeActionPerformed
        // TODO add your handling code here:
        
        if(chkChocCake.isSelected())
        {
            txtChocCake.setEnabled(true);
            txtChocCake.requestFocus();
            txtChocCake.setText("");
        }
        else
        {
            txtChocCake.setEnabled(false);
            txtChocCake.setText("0");
        }
        
    }//GEN-LAST:event_chkChocCakeActionPerformed

    private void chkCheesecakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCheesecakeActionPerformed
        // TODO add your handling code here:
        
        if(chkCheesecake.isSelected())
        {
            txtCheesecake.setEnabled(true);
            txtCheesecake.requestFocus();
            txtCheesecake.setText("");
        }
        else
        {
            txtCheesecake.setEnabled(false);
            txtCheesecake.setText("0");
        }
        
    }//GEN-LAST:event_chkCheesecakeActionPerformed

    private void chkTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTeaActionPerformed
        // TODO add your handling code here:
        
        if(chkTea.isSelected())
        {
            txtTea.setEnabled(true);
            txtTea.requestFocus();
            txtTea.setText("");
        }
        else
        {
            txtTea.setEnabled(false);
            txtTea.setText("0");
        }
    }//GEN-LAST:event_chkTeaActionPerformed

    private void chkCoffeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCoffeeActionPerformed
        // TODO add your handling code here:
        
        if(chkCoffee.isSelected())
        {
            txtCoffee.setEnabled(true);
            txtCoffee.requestFocus();
            txtCoffee.setText("");
        }
        else
        {
            txtCoffee.setEnabled(false);
            txtCoffee.setText("0");
        }
    }//GEN-LAST:event_chkCoffeeActionPerformed

    private void chkCokeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCokeActionPerformed
        // TODO add your handling code here:
        
        if(chkCoke.isSelected())
        {
            txtCoke.setEnabled(true);
            txtCoke.requestFocus();
            txtCoke.setText("");
        }
        else
        {
            txtCoke.setEnabled(false);
            txtCoke.setText("0");
        }
    }//GEN-LAST:event_chkCokeActionPerformed

    private void chkFOrangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFOrangeActionPerformed
        // TODO add your handling code here:
        
        if(chkFOrange.isSelected())
        {
            txtFOrange.setEnabled(true);
            txtFOrange.requestFocus();
            txtFOrange.setText("");
        }
        else
        {
            txtFOrange.setEnabled(false);
            txtFOrange.setText("0");
        }
    }//GEN-LAST:event_chkFOrangeActionPerformed

    private void chkStoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkStoneyActionPerformed
        // TODO add your handling code here:
        
        if(chkStoney.isSelected())
        {
            txtStoney.setEnabled(true);
            txtStoney.requestFocus();
            txtStoney.setText("");
        }
        else
        {
            txtStoney.setEnabled(false);
            txtStoney.setText("0");
        }
    }//GEN-LAST:event_chkStoneyActionPerformed

    private void txtChickenBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChickenBurgerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChickenBurgerActionPerformed

    private void txtBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBurgerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBurgerActionPerformed

    private void txtDCheeseBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDCheeseBurgerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDCheeseBurgerActionPerformed

    private void txtAvoBurgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAvoBurgerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAvoBurgerActionPerformed

    private void txtChocMuffinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChocMuffinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChocMuffinActionPerformed

    private void txtChocCakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChocCakeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChocCakeActionPerformed

    private void txtTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeaActionPerformed

    private void txtCoffeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCoffeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCoffeeActionPerformed

    private void txtCokeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCokeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCokeActionPerformed

    private void txtFOrangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFOrangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFOrangeActionPerformed

    private void txtStoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStoneyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStoneyActionPerformed

    private void txtTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTaxActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChangeActionPerformed

    private void txtSubtotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSubtotalKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtSubtotalKeyTyped

    private void txtPaymentKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaymentKeyTyped
        // TODO add your handling code here:
        
        char iValue = evt.getKeyChar();
        if(!(Character.isDigit(iValue))
            || (iValue == KeyEvent.VK_BACK_SPACE)
            || (iValue == KeyEvent.VK_DELETE))
                {
                    evt.consume();
                }
    }//GEN-LAST:event_txtPaymentKeyTyped

    private void txtPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaymentActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       /* try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmFastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmFastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmFastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmFastFood.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmFastFood().setVisible(true);
            }
        });
        
       // frmNewItems frmNewItems = new frmNewItems();
      //  frmNewItems.show();

    /**
     *
     * @param ev
     */

    }
      
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnTotal;
    private javax.swing.JCheckBox chkAvoBurger;
    private javax.swing.JCheckBox chkBurger;
    private javax.swing.JCheckBox chkCheeseBurger;
    private javax.swing.JCheckBox chkCheesecake;
    private javax.swing.JCheckBox chkChips;
    private javax.swing.JCheckBox chkChocCake;
    private javax.swing.JCheckBox chkChocMuffin;
    private javax.swing.JCheckBox chkCoffee;
    private javax.swing.JCheckBox chkCoke;
    private javax.swing.JCheckBox chkDCheeseBurger;
    private javax.swing.JCheckBox chkFOrange;
    private javax.swing.JCheckBox chkFood;
    private javax.swing.JCheckBox chkStoney;
    private javax.swing.JCheckBox chkTea;
    private javax.swing.JComboBox<String> cmbPaymentMethod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lblAdress;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAvoBurger;
    private javax.swing.JTextField txtBurger;
    private javax.swing.JTextField txtChange;
    private javax.swing.JTextField txtCheeseBurger;
    private javax.swing.JTextField txtCheesecake;
    private javax.swing.JTextField txtChickenBurger;
    private javax.swing.JTextField txtChips;
    private javax.swing.JTextField txtChocCake;
    private javax.swing.JTextField txtChocMuffin;
    private javax.swing.JTextField txtCoffee;
    private javax.swing.JTextField txtCoke;
    private javax.swing.JTextField txtDCheeseBurger;
    private javax.swing.JTextField txtFOrange;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPayment;
    private javax.swing.JTextField txtStoney;
    private javax.swing.JTextField txtSubtotal;
    private javax.swing.JTextField txtSurname;
    private javax.swing.JTextField txtTax;
    private javax.swing.JTextField txtTea;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
